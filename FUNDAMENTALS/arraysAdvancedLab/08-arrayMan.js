// –ó–¥—Ä–∞–≤–µ–π,
// –ü—ä—Ä–≤–æ –∑–∞ –∫—Ä–∞–π –Ω–∞ —Ü–∏–∫—ä–ª–∞ –Ω–µ –≤–∑–∏–º–∞—à –¥—ä–ª–∂–∏–Ω–∞—Ç–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª–Ω–∏—è –º–∞—Å–∏–≤ (—Ç.–µ. —Ç—Ä—è–±–≤–∞ –¥–∞ –≤–∑–µ–º–µ—à –¥—ä–ª–∂–∏–Ω–∞—Ç–∞ 
//     –Ω–∞ commands). –ò –¥—Ä—É–≥–æ—Ç–æ –º—è—Å—Ç–æ, –∫—ä–¥–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –Ω–∞–ø—Ä–∞–≤–∏ –ø–æ–ø—Ä–∞–≤–∫–∞ –µ –Ω–∞ 24-—Ç–∏ —Ä–µ–¥ - —Ç–∞–º –Ω–µ 
//     —Ç—Ä—è–±–≤–∞ –¥–∞ –≤–∑–∏–º–∞—à i –∫–∞—Ç–æ –Ω–∞—á–∞–ª–µ–Ω –∏–Ω–¥–µ–∫—Å, –∞ —Ç–æ–∑–∏, –∫–æ–π—Ç–æ —Ç–∏ –µ –∑–∞–¥–∞–¥–µ–Ω —Å–ø–æ—Ä–µ–¥ —É—Å–ª–æ–≤–∏–µ—Ç–æ (—Ç.–µ. secondNum).
//      –°—ä—â–æ –∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞—Ç–∞ –Ω–∞ 7-–º–∏ —Ä–µ–¥ —Ç–∏ –µ –∏–∑–ª–∏–∑—à–Ω–∞ üôÇ
function arrayManipulation(array) {
    let arr = array
        .shift()
        .split(' ')
        .map(Number);
    for (let i = 0; i < array.length; i++) {
      
 
        let [command, firstNum, secondNum] = array[i].split(' ');
        firstNum = Number(firstNum);
        secondNum = Number(secondNum);
        switch (command) {
            case "Add":
                arr.push(firstNum)
 
                break;
            case "Remove":
             arr = arr.filter(n => n !== firstNum)
                break;
            case "RemoveAt":
                arr.splice(firstNum, 1)
                break;
            case "Insert":
                arr.splice(secondNum, 0, firstNum)
                break;
        }
    }
    console.log(arr.join(' '));
 
}
arrayManipulation(['4 19 2 53 6 43',

'Add 3',

'Remove 2',

'RemoveAt 1',

'Insert 8 3'])